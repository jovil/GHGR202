{"version":3,"sources":["infinite-scroll.js","theme.js"],"names":["window","document","nextElement","querySelector","feedElement","postElements","gridLast","colcNew","childrenNodeArr","colcLast","increment","ticking","loading","lastScrollY","scrollY","lastWindowHeight","innerHeight","lastDocumentHeight","documentElement","scrollHeight","addEventListener","onScroll","passive","onResize","requestTick","onPageLoad","this","status","removeEventListener","div","response","querySelectorAll","Array","from","find","e","classList","contains","createElement","className","appendChild","Colcade","columns","items","colc","forEach","item","importNode","append","element","layout","resNextElement","href","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestAnimationFrame","menuTrigger","getElementById","menuPanel","menuList","firstElementChild","menuSkyLight","add","remove","setTimeout"],"mappings":"CAeA,SAAAA,EAAAC,GAEA,IAAAC,EAAAD,EAAAE,cAAA,kBACA,GAAAD,EAAA,CAKA,IAAAE,EAAAH,EAAAE,cAAA,cAEA,GAAAC,EAAA,CAIA,IAAAC,EACAC,EACAC,EAIAC,EAEAC,EAHAC,EAAA,EAOAC,GAAA,EACAC,GAAA,EAEAC,EAAAb,EAAAc,QACAC,EAAAf,EAAAgB,YACAC,EAAAhB,EAAAiB,gBAAAC,aAsIAnB,EAAAoB,iBAAA,SAAAC,EAAA,CAAAC,SAAA,IACAtB,EAAAoB,iBAAA,SAAAG,GAEAC,KAvIA,SAAAC,IACA,GAAA,MAAAC,KAAAC,OAGA,OAFA3B,EAAA4B,oBAAA,SAAAP,QACArB,EAAA4B,oBAAA,SAAAL,GAqBA,IAKAM,GArBAxB,EAAAqB,KAAAI,SAAAC,iBAAA,cAGAvB,EAAAwB,MAAAC,KAAA5B,GACAG,EAAA0B,KACAC,GACAA,EAAAC,UAAAC,SAAA,iBAKAR,EAAA5B,EAAAqC,cAAA,QACAC,UAAA,qBAAA7B,EACAN,EAAAoC,YAAAX,IAGAA,EAAA5B,EAAAqC,cAAA,QACAC,UAAA,6BAAA7B,EAAA,gBACAJ,EAAAL,EAAAE,cAAA,iBAAAO,IACA8B,YAAAX,IAEAA,EAAA5B,EAAAqC,cAAA,QACAC,UAAA,6BAAA7B,EAAA,eACAJ,EAAAkC,YAAAX,GAGAtB,EAAA,IAAAkC,QAAA,iBAAA/B,EAAA,CACAgC,QAAA,qBAAAhC,EACAiC,MAAA,sBAAAjC,EAAA,qBAMAD,EAFAF,GAKAqC,KAIAvC,EAAAwC,SAAA,SAAAC,GAMAA,EAAAV,UAAAC,SAAA,YAEA/B,EAAAkC,YAAAvC,EAAA8C,WAAAD,GAAA,IAGAvC,GAEAuC,EAAAP,UAAA,yCAAA7B,EAAA,QACAH,EAAAyC,OAAA/C,EAAA8C,WAAAD,GAAA,KAGArC,EAAAuC,OAAA/C,EAAA8C,WAAAD,GAAA,OAMArC,EAAAwC,QAAAb,UAAAC,SAAA,gBAAA3B,IACAkC,KAAAM,SAGAxC,IAGA,IAAAyC,EAAAzB,KAAAI,SAAA3B,cAAA,kBACAgD,EACAjD,EAAAkD,KAAAD,EAAAC,MAEApD,EAAA4B,oBAAA,SAAAP,GACArB,EAAA4B,oBAAA,SAAAL,IAIAN,EAAAhB,EAAAiB,gBAAAC,aACAR,GAAA,EACAC,GAAA,EAGA,SAAAyC,IAEA,IAAAzC,EAKA,GAAAC,EAAAE,GAAAE,EA7GA,IA8GAN,GAAA,MADA,CAKAC,GAAA,EAEA,IAAA0C,EAAA,IAAAtD,EAAAuD,eACAD,EAAAE,aAAA,WAEAF,EAAAlC,iBAAA,OAAAK,GAEA6B,EAAAG,KAAA,MAAAvD,EAAAkD,MACAE,EAAAI,KAAA,OAGA,SAAAlC,IACAb,GAAAX,EAAA2D,sBAAAN,GACA1C,GAAA,EAGA,SAAAU,IACAR,EAAAb,EAAAc,QACAU,IAGA,SAAAD,IACAR,EAAAf,EAAAgB,YACAC,EAAAhB,EAAAiB,gBAAAC,aACAK,KAlKA,CAyKAxB,OAAAC,UCxLA,WACA,IAAA2D,EAAA3D,SAAA4D,eAAA,kBACAC,EAAA7D,SAAA4D,eAAA,gBACAE,EAAAD,EAAAE,kBACAC,EAAAhE,SAAA4D,eAAA,mBAiBA5D,SAAAmB,iBAAA,oBAAA,WAdAwC,EAAAxC,iBAAA,SAAA,WACA0C,EAAA1B,UAAA8B,IAAA,cACAH,EAAA3B,UAAA8B,IAAA,iBAGAD,EAAA7C,iBAAA,SAAA,WACA2C,EAAA3B,UAAA+B,OAAA,cAEAC,YAAA,WACAN,EAAA1B,UAAA+B,OAAA,gBACA,WAjBA","file":"theme.js","sourcesContent":["/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function(window, document) {\n\t// next link element\n\tvar nextElement = document.querySelector('link[rel=next]');\n\tif (!nextElement) {\n\t\treturn;\n\t}\n\n\t// post feed element\n  var feedElement = document.querySelector('.post-feed');\n\n\tif (!feedElement) {\n\t\treturn;\n\t}\n\n  var postElements;\n  var gridLast;\n  var colcNew;\n  var div;\n  var i;\n  var increment = 1;\n  var childrenNodeArr;\n  var hasFeaturePost;\n  var colcLast;\n\n\tvar buffer = 300;\n\n\tvar ticking = false;\n\tvar loading = false;\n\n\tvar lastScrollY = window.scrollY;\n\tvar lastWindowHeight = window.innerHeight;\n\tvar lastDocumentHeight = document.documentElement.scrollHeight;\n\n\tfunction onPageLoad() {\n\t\tif (this.status === 404) {\n\t\t\twindow.removeEventListener('scroll', onScroll);\n\t\t\twindow.removeEventListener('resize', onResize);\n\t\t\treturn;\n\t\t}\n\n\t\t// append contents\n    postElements = this.response.querySelectorAll('.post-card');\n\n    // check if list contains feature post\n    childrenNodeArr = Array.from(postElements);\n    hasFeaturePost = childrenNodeArr.find(\n      e =>\n        e.classList.contains(\"featured\")\n    )\n\n    if (hasFeaturePost) {\n      // create new grid element\n      div = document.createElement('div');\n      div.className = \"grid grid-gallery-\" + increment;\n      feedElement.appendChild(div)\n\n      // create new grid columns\n      var div = document.createElement('div');\n      div.className = \"grid-col grid-gallery-col-\" + increment + \" grid-col--1\";\n      gridLast = document.querySelector('.grid-gallery-' + increment);\n      gridLast.appendChild(div)\n\n      var div = document.createElement('div');\n      div.className = \"grid-col grid-gallery-col-\" + increment + \" grid-col--2\";\n      gridLast.appendChild(div)\n\n      // initialize colcade\n      colcNew = new Colcade('.grid-gallery-' + increment, {\n        columns: '.grid-gallery-col-' + increment,\n        items: '.grid-gallery-item-' + increment + ':not(.featured)'\n      })\n    } {\n      // determines where postElements are going to be injected if there's no feature post\n      if (colcNew) {\n        // more than 1 instance running\n        colcLast = colcNew\n      } else {\n        // only 1 instance running\n        colcLast = colc\n      }\n    }\n\n\t\tpostElements.forEach(function(item) {\n\t\t\t// document.importNode is important, without it the item's owner\n\t\t\t// document will be different which can break resizing of\n\t\t\t// `object-fit: cover` images in Safari\n\t\t\t// console.log('item', item);\n\n\t\t\tif (item.classList.contains('featured')) {\n        // append feature post outside grid-col\n\t\t\t\tgridLast.appendChild(document.importNode(item, true));\n\t\t\t} else {\n        // determines where postElements are going to be injected if there's no feature post\n        if (colcNew) {\n          // more than 1 instance running\n          item.className = \"post-card grid-item grid-gallery-item-\" + increment + \" post\";\n          colcNew.append(document.importNode(item, true));\n        } else {\n          // only 1 instance running\n          colcLast.append(document.importNode(item, true));\n        }\n\t\t\t}\n    });\n\n    // lays out all elements\n    if (colcLast.element.classList.contains('grid-gallery-' + increment)) {\n      colc.layout()\n    }\n\n    increment++;\n\n\t\t// set next link\n\t\tvar resNextElement = this.response.querySelector('link[rel=next]');\n\t\tif (resNextElement) {\n\t\t\tnextElement.href = resNextElement.href;\n\t\t} else {\n\t\t\twindow.removeEventListener('scroll', onScroll);\n\t\t\twindow.removeEventListener('resize', onResize);\n\t\t}\n\n\t\t// sync status\n\t\tlastDocumentHeight = document.documentElement.scrollHeight;\n\t\tticking = false;\n\t\tloading = false;\n\t}\n\n\tfunction onUpdate() {\n\t\t// return if already loading\n\t\tif (loading) {\n\t\t\treturn;\n\t\t}\n\n\t\t// return if not scroll to the bottom\n\t\tif (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n\t\t\tticking = false;\n\t\t\treturn;\n\t\t}\n\n\t\tloading = true;\n\n\t\tvar xhr = new window.XMLHttpRequest();\n\t\txhr.responseType = 'document';\n\n\t\txhr.addEventListener('load', onPageLoad);\n\n\t\txhr.open('GET', nextElement.href);\n\t\txhr.send(null);\n\t}\n\n\tfunction requestTick() {\n\t\tticking || window.requestAnimationFrame(onUpdate);\n\t\tticking = true;\n\t}\n\n\tfunction onScroll() {\n\t\tlastScrollY = window.scrollY;\n\t\trequestTick();\n\t}\n\n\tfunction onResize() {\n\t\tlastWindowHeight = window.innerHeight;\n\t\tlastDocumentHeight = document.documentElement.scrollHeight;\n\t\trequestTick();\n\t}\n\n\twindow.addEventListener('scroll', onScroll, { passive: true });\n\twindow.addEventListener('resize', onResize);\n\n\trequestTick();\n})(window, document);\n",";(function () {\n  var menuTrigger = document.getElementById('navbar-trigger'),\n    menuPanel = document.getElementById('navbar-panel'),\n    menuList = menuPanel.firstElementChild,\n    menuSkyLight = document.getElementById('navbar-skylight')\n\n  function initMenu () {\n    menuTrigger.addEventListener('click', function () {\n      menuPanel.classList.add('is-visible')\n      menuList.classList.add('is-visible')\n    })\n\n    menuSkyLight.addEventListener('click', function () {\n      menuList.classList.remove('is-visible')\n\n      setTimeout(function () {\n        menuPanel.classList.remove('is-visible')\n      }, 500)\n    })\n  }\n\n  document.addEventListener('DOMContentLoaded', function () {\n    initMenu()\n  })\n})()\n"]}